# Generated by Django 2.0.3 on 2018-03-15 20:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Airline',
            fields=[
                ('airline_id', models.CharField(db_column='Airline_ID', max_length=5, primary_key=True, serialize=False)),
                ('airline_name', models.CharField(blank=True, db_column='Airline_name', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Airline',
            },
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('airport_id', models.CharField(db_column='Airport_ID', max_length=3, primary_key=True, serialize=False)),
                ('airport_name', models.CharField(blank=True, db_column='Airport_name', max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=45, null=True)),
                ('country', models.CharField(blank=True, max_length=45, null=True)),
                ('time_zone', models.CharField(blank=True, db_column='Time_zone', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Airport',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(db_column='Customer_ID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, db_column='First_name', max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, db_column='Last_name', max_length=20, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=45, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=10, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=10, null=True)),
                ('zip', models.IntegerField(blank=True, db_column='Zip', null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=11, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=20, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=20, null=True)),
                ('preference', models.CharField(blank=True, db_column='Preference', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='FareRestriction',
            fields=[
                ('fare_id', models.AutoField(db_column='Fare_ID', primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=3, null=True)),
                ('discount', models.FloatField(blank=True, db_column='Discount', null=True)),
            ],
            options={
                'db_table': 'Fare_Restriction',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationInfo',
            fields=[
                ('reservation_id', models.AutoField(db_column='Reservation_ID', primary_key=True, serialize=False)),
                ('order_date', models.DateField(blank=True, db_column='Order_date', null=True)),
                ('total_cost', models.IntegerField(blank=True, db_column='Total_cost', null=True)),
                ('book_fee', models.IntegerField(blank=True, db_column='Book_fee', null=True)),
                ('leave_date', models.DateField(blank=True, db_column='Leave_date', null=True)),
                ('representative_id', models.CharField(blank=True, db_column='Representative_ID', max_length=10, null=True)),
            ],
            options={
                'db_table': 'Reservation_Info',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('customer', models.ForeignKey(db_column='Customer_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='polls.Customer')),
                ('account_id', models.IntegerField(db_column='Account_ID')),
                ('create_date', models.DateField(blank=True, db_column='Create_date', null=True)),
                ('credit_card', models.IntegerField(blank=True, db_column='Credit_card', null=True)),
            ],
            options={
                'db_table': 'Account',
            },
        ),
        migrations.CreateModel(
            name='Flights',
            fields=[
                ('airline', models.ForeignKey(db_column='Airline_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='polls.Airline')),
                ('flight_id', models.IntegerField(db_column='Flight_ID')),
                ('capacity', models.IntegerField(blank=True, db_column='Capacity', null=True)),
                ('fare', models.IntegerField(blank=True, db_column='Fare', null=True)),
                ('workday', models.IntegerField(blank=True, db_column='Workday', null=True)),
                ('depart_time', models.TimeField(blank=True, db_column='Depart_time', null=True)),
                ('arrive_time', models.TimeField(blank=True, db_column='Arrive_time', null=True)),
            ],
            options={
                'db_table': 'Flights',
            },
        ),
        migrations.CreateModel(
            name='ReservationFlight',
            fields=[
                ('reservation', models.ForeignKey(db_column='Reservation_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='polls.ReservationInfo')),
                ('airline_id', models.CharField(db_column='Airline_ID', max_length=5)),
                ('flight_id', models.IntegerField(db_column='Flight_ID')),
                ('p_name', models.CharField(db_column='P_name', max_length=20)),
                ('p_seat', models.IntegerField(blank=True, db_column='P_seat', null=True)),
                ('p_meal', models.CharField(blank=True, db_column='P_meal', max_length=10, null=True)),
                ('p_class', models.CharField(blank=True, db_column='P_class', max_length=10, null=True)),
                ('price', models.IntegerField(blank=True, db_column='Price', null=True)),
            ],
            options={
                'db_table': 'Reservation_Flight',
            },
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Question'),
        ),
        migrations.CreateModel(
            name='Delay',
            fields=[
                ('airline', models.ForeignKey(db_column='Airline_ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='Airline_ID_related', serialize=False, to='polls.Flights')),
                ('delay_date', models.DateField(blank=True, db_column='Delay_date', null=True)),
                ('delay_time', models.TimeField(blank=True, db_column='Delay_time', null=True)),
            ],
            options={
                'db_table': 'Delay',
            },
        ),
        migrations.AddField(
            model_name='reservationinfo',
            name='airline',
            field=models.ForeignKey(db_column='Airline_ID', on_delete=django.db.models.deletion.CASCADE, related_name='airline_related', to='polls.Flights'),
        ),
        migrations.AddField(
            model_name='reservationinfo',
            name='flight',
            field=models.ForeignKey(db_column='Flight_ID', on_delete=django.db.models.deletion.CASCADE, related_name='fligth_related', to='polls.Flights'),
        ),
        migrations.AlterUniqueTogether(
            name='reservationflight',
            unique_together={('reservation', 'airline_id', 'flight_id', 'p_name')},
        ),
        migrations.AddField(
            model_name='flights',
            name='arrive_airport',
            field=models.ForeignKey(blank=True, db_column='Arrive_Airport', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Arrive_Airport_related', to='polls.Airport'),
        ),
        migrations.AddField(
            model_name='flights',
            name='depart_airport',
            field=models.ForeignKey(blank=True, db_column='Depart_Airport', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Depart_Airport_related', to='polls.Airport'),
        ),
        migrations.AddField(
            model_name='flights',
            name='fare_0',
            field=models.ForeignKey(blank=True, db_column='Fare_ID', null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.FareRestriction'),
        ),
        migrations.AddField(
            model_name='account',
            name='reservation',
            field=models.ForeignKey(db_column='Reservation_ID', on_delete=django.db.models.deletion.CASCADE, to='polls.ReservationInfo'),
        ),
        migrations.AlterUniqueTogether(
            name='flights',
            unique_together={('airline', 'flight_id')},
        ),
        migrations.AddField(
            model_name='delay',
            name='flight',
            field=models.ForeignKey(db_column='Flight_ID', on_delete=django.db.models.deletion.CASCADE, related_name='Flight_ID_related', to='polls.Flights'),
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together={('customer', 'account_id')},
        ),
        migrations.AlterUniqueTogether(
            name='delay',
            unique_together={('airline', 'flight')},
        ),
    ]
